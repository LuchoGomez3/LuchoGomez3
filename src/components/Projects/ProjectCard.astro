---
interface Props {
  title: string;
  description: string;
  imgSrc: string;
  link: string;
  tags: string[];
}

const { title, description, imgSrc, link, tags } = Astro.props;
---

<div
  class="max-w-sm bg-white border border-gray-200 rounded-lg shadow-sm dark:bg-gray-800 dark:border-gray-700 hover:translate-y-[-5px] transition-all duration-300 flex flex-col"
>
  <a href={link}>
    <img
      class="rounded-t-lg object-cover w-full h-[250px]"
      src={imgSrc}
      alt={title}
    />
  </a>

  <div class="p-5 flex flex-col flex-1">
    <div>
      <a href={link}>
        <h5
          class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white"
        >
          {title}
        </h5>
      </a>
      <p class="mb-3 font-normal text-gray-700 dark:text-gray-400">
        {description}
      </p>
    </div>

    <div class="mt-auto flex flex-col gap-4">
      <div class="flex flex-wrap justify-evenly gap-2">
        {
          tags.map((tag) => (
            <span class="text-xs font-medium px-2.5 py-0.5 rounded-sm bg-gray-100 dark:bg-gray-700">
              {tag}
            </span>
          ))
        }
      </div>

      <a
        href={link}
        class="inline-flex w-[150px] mx-auto items-center px-3 py-2 text-sm font-medium text-center rounded-lg hover:bg-green-600 focus:ring-4 focus:outline-none focus:ring-blue-300"
      >
        Ver Proyecto
        <svg
          class="rtl:rotate-180 w-3.5 h-3.5 ms-2"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 14 10"
        >
          <path
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M1 5h12m0 0L9 1m4 4L9 9"></path>
        </svg>
      </a>
    </div>
  </div>
</div>
